openapi: 3.0.0
info:
  title: Orderfaz API Docs
  version: 1.0.0
  description: Combined Auth Service & Logistic Service

servers:
  - url: http://localhost:8081
    description: Auth Service
  - url: http://localhost:8082
    description: Logistic Service

paths:
  # AUTH SERVICE
  /register:
    post:
      tags: [Auth]
      summary: Register user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
            example:
              msisdn: "628123456789"
              name: "Zaenal Muttaqien"
              username: "zaenal"
              password: "SuperSecret123!"
      responses:
        '201':
          description: Registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: user registered
        '400':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: username exists

  /login:
    post:
      tags: [Auth]
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
            example:
              msisdn: "628123456789"
              password: "SuperSecret123!"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid credentials

  /profile:
    get:
      tags: [Auth]
      summary: Get JWT claims (user profile)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  exp: 1752482029
                  msisdn: "628123456789"
                  user_id: "e321112d-56c8-41e0-b6b6-dbb9edb0e314"
                  username: "zaenal"
        '401':
          description: Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid JWT

  # LOGISTIC SERVICE - semua endpoint di baseURL http://localhost:8082
  /shipments:
    post:
      tags: [Logistic]
      summary: Create shipment
      security:
        - bearerAuth: []
      servers:
        - url: http://localhost:8082
          description: Logistic Service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentInput'
            example:
              tracking_number: "JNE123456789"
              logistic_name: "JNE"
              status: "on_process"
              origin: "Jakarta Warehouse"
              destination: "Bandung, Jawa Barat"
              sender:
                name: "Ahmad N"
                phone: "6285212345678"
                address: "Jl. Merdeka No.1, Bandung"
              recipient:
                name: "Budi"
                phone: "08987654321"
                address: "Jl. Sudirman No.10, Bandung"
              items:
                - name: "Sepatu Running"
                  quantity: 2
                  weight: 1.2
                - name: "Kaos Olahraga"
                  quantity: 1
                  weight: 0.5
              notes: "Handle with care, insured"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
        '400':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: tracking number already exists

    get:
      tags: [Logistic]
      summary: Get all shipments for the logged-in user
      security:
        - bearerAuth: []
      servers:
        - url: http://localhost:8082
          description: Logistic Service
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shipment'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid or expired JWT

  /shipments/{trackingNumber}:
    get:
      tags: [Logistic]
      summary: Get shipment details by tracking number
      security:
        - bearerAuth: []
      servers:
        - url: http://localhost:8082
          description: Logistic Service
      parameters:
        - name: trackingNumber
          in: path
          required: true
          schema:
            type: string
          description: Tracking number of the shipment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
        '404':
          description: Shipment not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: shipment not found

  /shipments/{trackingNumber}/status:
    patch:
      tags: [Logistic]
      summary: Update shipment status by tracking number
      security:
        - bearerAuth: []
      servers:
        - url: http://localhost:8082
          description: Logistic Service
      parameters:
        - name: trackingNumber
          in: path
          required: true
          schema:
            type: string
          description: Tracking number of the shipment to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum: [on_process, delivered, cancelled]
      responses:
        '200':
          description: Status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: status updated
        '400':
          description: Bad request (e.g. missing status)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: status is required
        '404':
          description: Shipment not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: shipment not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Register:
      type: object
      required:
        - msisdn
        - name
        - username
        - password
      properties:
        msisdn:
          type: string
        name:
          type: string
        username:
          type: string
        password:
          type: string

    Login:
      type: object
      required:
        - msisdn
        - password
      properties:
        msisdn:
          type: string
        password:
          type: string

    ShipmentItem:
      type: object
      properties:
        name:
          type: string
        quantity:
          type: integer
        weight:
          type: number
          format: float

    ShipmentInput:
      type: object
      required:
        - tracking_number
        - logistic_name
        - status
        - origin
        - destination
        - sender
        - recipient
        - items
      properties:
        tracking_number:
          type: string
        logistic_name:
          type: string
        status:
          type: string
          enum:
            - on_process
            - delivered
            - cancelled
        origin:
          type: string
        destination:
          type: string
        sender:
          type: object
          required:
            - name
            - phone
            - address
          properties:
            name:
              type: string
            phone:
              type: string
            address:
              type: string
        recipient:
          type: object
          required:
            - name
            - phone
            - address
          properties:
            name:
              type: string
            phone:
              type: string
            address:
              type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/ShipmentItem'
        notes:
          type: string

    Shipment:
      allOf:
        - $ref: '#/components/schemas/ShipmentInput'
        - type: object
          properties:
            id:
              type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
